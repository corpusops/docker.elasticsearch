---
corpusops_core_projects_path: /srv/projects
# app version
cops_elasticsearch_version: "{{
  ansible_env.get('COPS_IMGVER', '5.4.0')}}"
# app domain & users
cops_elasticsearch_users:
  admin:
    password: "{{
        lookup('password',
                (cops_elasticsearch_cfg+'/pwd_admin '
                 'length=15 chars=ascii_letters,digits')) }}"
# users than have full right to edit file in the container
# When this is enabled, the project user/group is also granted full perms
# (attention, uids!)
# users than have full right to edit file in the container
# When this is enabled, the project user/group is also granted full perms
# (attention, uids!)
cops_elasticsearch__supereditors_paths:
  - "{project_root}"
  - "{data_root}"
# space separated string of uids to allow to write inside
# projetct directories (used in development through posix ACLS setter)
cops_elasticsearch__supereditors: >-
  {{ ansible_env.get(
      'SUPEREDITORS', cops_supereditors|default('')
     ) | copsf_splitstrip | to_json }}
cops_elasticsearch_supereditors_paths: "{_supereditors_paths}"
cops_elasticsearch_supereditors: "{_supereditors}"
cops_elasticsearch_deb_packages: [apache2-utils, python-passlib]
cops_elasticsearch_rh_packages: [httpd-tools, python-passlib]
# extra conf to add to pgconf (directly added to a tuning conf file (string))
cops_elasticsearch_domain: "{{ansible_fqdn}}"
# for internal monitoring
cops_elasticsearch_query_host: "{% if '_local_' in cops_elasticsearch_bind_host
  %}127.0.0.1{% elif '_site_' in cops_elasticsearch_bind_host
  %}{{ansible_fqdn}}{% else
  %}{bind_host}{%endif%}"
cops_elasticsearch_cfg: "{data_root}/config"
cops_elasticsearch_name: 'elasticsearch'
cops_elasticsearch_user: "{name}-user"
cops_elasticsearch_group: "{name}-group"
cops_elasticsearch_projects_dir: '{{corpusops_vars.projects_path}}'
cops_elasticsearch_project_dir: '{projects_dir}/{name}'
cops_elasticsearch_project_root: "{project_dir}/project"
cops_elasticsearch_data_root: "{project_dir}/data"
cops_elasticsearch_fixperms: "{project_dir}/fixperms.sh"
cops_elasticsearch_fixperms_cron_periodicity: "0 */2 * * *"
cops_elasticsearch_fixperms_cron: "/etc/cron.d/{name}-fixperms"
# overrides this dict with values of cops_elasticsearch_env !
cops_elasticsearch_env_overrides: {}
cops_elasticsearch_env:
  # EG: ES_JAVA_OPTS: "-Xms4000m -Xmx4000m"
  ES_HTTP_PORT: "9200"
  ES_TCP_PORT: "9300"
  ES_JAVA_OPTS: "-Xms{mem} -Xmx{mem}"
  ES_CONF_DIR: "{cfg}"
  ES_LAUNCHER: "elasticsearch"
  ES_PID_DIR: "{run}"
  ES_USE_IPV4: "1"
  ES_NETWORK_HOST: "{bind_host}"
  ES_NETWORK_BIND_HOST: "{bind_host}"
  ES_NETWORK_PUBLISH_HOST: "{bind_host}"
  ES_HTTP_MAX_CONTENT_LENGTH: "1000mb"
  ES_DISCOVERY_ZEN_MINIMUM_MASTER_NODES: "1"
  ES_NUMBER_OF_SHARDS: "6"
  ES_NUMBER_OF_REPLICAS: "1"
  ES_HOME: "{root}"
  ES_PATH_CONF: "{cfg}"
  ES_PATH_DATA: "{data}"
  ES_PATH_WORK: "{tmp}"
  ES_PATH_LOGS:  "{logs}"
  ES_PATH_PLUGINS: "{pluginsd}"
  ES_MLOCKALL: "true"
  ES_ACTION_DISABLE_DELETE_ALL_INDICES: "true"
  ES_DISCOVERY_ZEN_PING_MULTICAST_ENABLED: "false"
  ES_HTTP_JSONP: "true"
  ES_CORS_ENABLED: "true"
  ES_NODE_NAME: "{{ansible_fqdn}}"
  ES_NODE_MASTER: "true"
  ES_NODE_DATA: "true"
  ES_CLUSTER_NAME: "elasticsearch"
  ES_LOG_KEEP_LOG_DAYS: 15
  # comma sepated list ( foo="host1, host2" )
  ES_DISCOVERY_ZEN_PING_UNICAST_HOSTS: ""
  ES_LOG_STATUS: ERROR
  ES_LOG_LEVEL: INFO
  ES_LOG_LEVEL_ACTION: DEBUG
  ES_LOG_INDEX_SEARCH_SLOWLOG: "false"
  ES_LOG_INDEX_INDEXING_SLOWLOG: "false"
cops_elasticsearch_secret_variables: []
cops_elasticsearch_cops_format_resolve_topdb: false
cops_elasticsearch_cops_do_format_resolve: true
cops_elasticsearch_cops_sub_namespaces:
  s: {}
  lifecycle: {}
  force: {}
  nginx: {}
cops_elasticsearch_elasticsearch_bind_host: '127.0.0.1'
# templates
## entry point
cops_elasticsearch_provision_dir: /provision_dir
cops_elasticsearch_ep_ansible_args: >-
 -e "cops_cwd={provision_dir}"
 -e "cops_playbooks=${COPS_ROOT}/playbooks/corpusops"
 -e "cops_path=${COPS_ROOT}"
cops_elasticsearch_ep_vaults:
  - "{provision_dir}/.ansible/vaults/default.yml"
  - "{provision_dir}/.ansible/vaults/app.yml"
  - "{provision_dir}/.ansible/vaults/docker.yml"
  - /setup/reconfigure.yml
cops_elasticsearch_ep_template: "../templates/app_entry_point"
# Docker entrypoint settings, tags for cli and vars for playbook reuse via
# conditionals
cops_elasticsearch_ep_folder: ".ansible"
cops_elasticsearch_ep_playbook: "site.yml"
cops_elasticsearch_ep_skip_tags: "{{(
  'cops_elasticsearch_s_users,'
  'cops_elasticsearch_s_first_fixperms,'
  'cops_elasticsearch_s_prerequisites,'
  'cops_elasticsearch_s_entry_point,'
  'cops_elasticsearch_s_workers,'
  'cops_elasticsearch_s_plugins,'
  'cops_elasticsearch_s_reverse_proxy,'

  )}}"
cops_elasticsearch_ep_post_start_skip_tags: "{{(
  'cops_elasticsearch_s_users,'
  'cops_elasticsearch_s_layout,'
  'cops_elasticsearch_s_first_fixperms,'
  'cops_elasticsearch_s_prerequisites,'
  'cops_elasticsearch_s_setup,'
  'cops_elasticsearch_s_entry_point,'
  'cops_elasticsearch_s_workers,'
  'cops_elasticsearch_s_plugins,'
  'cops_elasticsearch_s_reverse_proxy_install,'
  'cops_elasticsearch_s_end_fixperms,'
  )}}"
# global orchestration steps (db, code sync, web & workers prereqs, elasticsearch config)
cops_elasticsearch_become: true
cops_elasticsearch_lifecycle_app: true
cops_elasticsearch_lifecycle_app_push_code: true
cops_elasticsearch_lifecycle_app_setup: true
# elasticsearch & project deployment steps
cops_elasticsearch_s_vars: true
# deploy steps
cops_elasticsearch_s_users: true
cops_elasticsearch_s_users_group: true
cops_elasticsearch_s_users_user: true
cops_elasticsearch_s_entry_point: true
cops_elasticsearch_s_first_fixperms: true
cops_elasticsearch_s_fixperms_configs: true
cops_elasticsearch_s_fixperms_run: true
cops_elasticsearch_s_setup: true
cops_elasticsearch_s_setup_configs: true
cops_elasticsearch_s_setup_files: true
cops_elasticsearch_s_layout: true
cops_elasticsearch_s_layout_layout: true
cops_elasticsearch_s_plugins: true
cops_elasticsearch_s_plugins_install: true
cops_elasticsearch_s_prerequisites: true
cops_elasticsearch_s_prerequisites_archive_es: true
cops_elasticsearch_s_prerequisites_es: true
cops_elasticsearch_s_prerequisites_jdk: true
cops_elasticsearch_s_prerequisites_pkgs: true
cops_elasticsearch_s_workers: true
cops_elasticsearch_s_workers_service: true
cops_elasticsearch_s_workers_checks: true
cops_elasticsearch_s_reverse_proxy: true
cops_elasticsearch_s_reverse_proxy_install: true
cops_elasticsearch_s_reverse_proxy_users: true
cops_elasticsearch_s_reverse_proxy_vhost: true
cops_elasticsearch_s_end_fixperms: true
#
cops_elasticsearch_ep_main_ep: "/entry_point"
# service
cops_elasticsearch_service: "cops_{name}"
cops_elasticsearch_services: ["{service}"]
cops_elasticsearch_rhandlers: [restart_cops_elasticsearch]
# use in docker (via a vault):
cops_elasticsearch_reconfigure_services: []
# cops_elasticsearch_reconfigure_services: ["post-start-{service}"]
cops_elasticsearch_activated: true
#
cops_elasticsearch_root: "{project_root}/es"
cops_elasticsearch_real_root: "{project_root}/es-{version}"
cops_elasticsearch_run: "{root}/run"
cops_elasticsearch_bin: "{project_root}/bin"
cops_elasticsearch_pluginsd: "{real_root}/plugins"
cops_elasticsearch_modules: "{real_root}/modules"
cops_elasticsearch_logs: "{data_root}/logs"
cops_elasticsearch_data: "{data_root}/data"
cops_elasticsearch_tmp: "{data_root}/tmp"
#
cops_elasticsearch_bind_host: "_local_,_site_"
cops_elasticsearch_sha1_verify: true
# defaults to 'default' or can be selected 'version major'
cops_elasticsearch_plugins:
  1:
    - mobz/elasticsearch-head: head
    - karmi/elasticsearch-paramedic: paramedic
  default:
    #- mobz/elasticsearch-head: head
    - mapper-attachments: mapper-attachments
cops_elasticsearch_filetest:
  - bin/elasticsearch
  - bin/plugin
  - config/elasticsearch.yml
# re-computed in tasks/vars.yml
# ENVIRONMENT VARIABLES always win !
cops_elasticsearch_mem: "2g"
cops_elasticsearch_bn: "elasticsearch-{version}"
cops_elasticsearch_tb: "{bn}.tar.gz"
cops_elasticsearch_url: "{% if cops_elasticsearch_version[0] < '5' %}https://download.elasticsearch.org/elasticsearch/elasticsearch/{%else%}https://artifacts.elastic.co/downloads/elasticsearch/{%endif%}{tb}"
cops_elasticsearch_sha1_url: "{url}.sha1"
cops_elasticsearch_version_m: "{{cops_elasticsearch_version[0]}}"
cops_elasticsearch_sha1file: "{real_root}/sha1_{version}"
# set this to a specific interface if neccessary
# cops_elasticsearch_es_bind_host: '127.0.0.1'
# templates
## nginx
cops_elasticsearch_nginx_top_template: "../templates/nginx.top.conf"
cops_elasticsearch_nginx_content_template: "../templates/nginx.content.conf"
## app
cops_elasticsearch_config_tmpl: "../templates/elasticsearch.yml"
cops_elasticsearch_logging: "../templates/logging.yml"
cops_elasticsearch_log4j2: "../templates/log4j2.properties"
cops_elasticsearch_jvmoptions: "../templates/jvm.options"
cops_elasticsearch_service_cmd: "{root}/bin/run.sh"
cops_elasticsearch_limits_nofile: 65536
cops_elasticsearch_limits_nproc: 4096
# Reverse proxy
cops_elasticsearch_default_vhost_is_default_server: false
cops_elasticsearch_htpasswd: "/etc/nginx/{name}-htpasswd"
cops_elasticsearch_ssl_protected: false
cops_elasticsearch_nginx: {}
cops_elasticsearch_nginx_domain: "{{ansible_fqdn}}"
cops_elasticsearch_nginx_basename: "corpus-{name}"
cops_elasticsearch_nginx_is_default_server: true
cops_elasticsearch_nginx_ssl_protected: "{{cops_elasticsearch_ssl_protected}}"
cops_elasticsearch_nginx_htpasswd: "{htpasswd}"
cops_elasticsearch_nginx_force_reload: true
cops_elasticsearch_nginx_ssl_cert: ""
cops_elasticsearch_nginx_ssl_key: ""
cops_elasticsearch_nginx_loglevel: crit
cops_elasticsearch_nginx_upstream_name: "{name}"
# Layout, files & configs
cops_elasticsearch_stickymode: "2"
cops_elasticsearch_files:
  - {path: "{projects_dir}",
     owner: root, group: root, state: directory}
  - {path: "{project_dir}",
     owner: root, group: root, state: directory}
  - {path: "{project_root}",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}755"}
  - {path: "{data_root}",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}755"}
  - {path: "{root}",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}755"}
  - {path: "{real_root}",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}755"}
  - {path: "{cfg}",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}755"}
  - {path: "{logs}",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}755"}
  - {path: "{tmp}",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}755"}
  - {path: "{modules}",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}755"}
  - {path: "{pluginsd}",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}755"}
  - {path: "{run}",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}755"}
  - {path: "{data}",
     owner: "{user}", group: "{group}",
     state: directory, mode: "{stickymode}755"}
  - {path: "{root}/config",  src: "{cfg}", state: link, force: true}
  - {path: "{root}/logs",    src: "{logs}", state: link, force: true}
  - {path: "{root}/tmp",     src: "{tmp}", state: link, force: true}
  - {path: "{root}/bin",     src: "{real_root}/bin", state: link, force: true}
  - {path: "{root}/lib",     src: "{real_root}/lib", state: link, force: true}
  - {path: "{root}/modules", src: "{real_root}/modules", state: link, force: true}
  - {path: "{root}/plugins", src: "{pluginsd}", state: link, force: true}
cops_elasticsearch_configs:
  - {src: "../templates/app.service",
     dest: "/etc/systemd/system/{service}.service",
     mode: "0644",
     owner: "{user}", group: "{group}"}
  - {src: "../templates/run.sh",
     dest: "{real_root}/bin/run.sh", mode: "0755",
     owner: "{user}", group: "{group}"}
  - {src: "../templates/es.env",
     dest: "{real_root}/bin/es.env", mode: "0644",
     owner: "{user}", group: "{group}"}
  - {src: "{logging}",
     dest: "{cfg}/logging.yml", mode: "0644",
     owner: "{user}", group: "{group}"}
  - {src: "{log4j2}",
     dest: "{cfg}/log4j2.properties", mode: "0644",
     owner: "{user}", group: "{group}"}
  - {src: "{jvmoptions}",
     dest: "{cfg}/jvm.options", mode: "0644",
     owner: "{user}", group: "{group}"}
  - {src: "{config_tmpl}",
     dest: "{cfg}/elasticsearch.yml", mode: "0644",
     owner: "{user}", group: "{group}"}
cops_elasticsearch_fixperms_configs:
  - {src: "../templates/fixperms.sh",
     dest: "{fixperms}", mode: "0755",
     owner: root, group: root}
cops_elasticsearch_ep_configs:
  # script to reconfigure image before and after systemd is launched
  - {src: "../templates/reconfigure.sh",
     dest: "{reconfigure}",
     mode: "0755",
     owner: "root",
     group: "root"}
  - {src: "../templates/post-start-reconfigure.service",
     dest: "/etc/systemd/system/post-start-{service}.service",
     mode: "0644",
     owner: "root",
     group: "root"}
  - {src: "{ep_template}",
     dest: "/app_entry_point", mode: "0755",
     owner: root, group: root}
# SystemD based reconfigure unit settings
cops_elasticsearch_reconfigure_service_stderr: ""
cops_elasticsearch_reconfigure_service_stdout: ""
cops_elasticsearch_reconfigure_unit_after: "network.target elasticsearch.service"
cops_elasticsearch_reconfigure_install_wantedby: "multi-user.target"
cops_elasticsearch_reconfigure: "{project_dir}/reconfigure.sh"
cops_elasticsearch_reconfigure_passenv: "ANSIBLE_PLAY ANSIBLE_FOLDER COPS_ROOT"
cops_elasticsearch_reconfigure_verbosity: "-v"
# Code synchronnisation settings
cops_elasticsearch_push_codes_cwd: "{cops_cwd}"
cops_elasticsearch_push_codes_sync_mode: "{{ cops_installer_mode in ['vagrant'] and 'rsync' or 'git' }}"
cops_elasticsearch_push_codes_file_tests:
  git: []
  rsync: [".git"]
cops_elasticsearch_push_codes_rsync_opts:
  git:   ["-azv",                           "--exclude", "local/*", "--exclude", ".vagrant", "--exclude", "*.retry"]
  rsync: ["-azv", "--include", ".git/**/*", "--exclude", "local/*", "--exclude", ".vagrant", "--exclude", "*.retry"]
cops_elasticsearch_push_codes_rsync_submodule_opts:
  git:   ["-azv", "--exclude", "*.retry"]
  rsync: ["-azv", "--exclude", "*.retry"]
cops_elasticsearch_push_codes:
- path: "{project_root}"
  origin_path: "{push_codes_cwd}"
  sync_mode: "{{cops_elasticsearch_push_codes_sync_mode}}"
  rsync_opts: "{{cops_elasticsearch_push_codes_rsync_opts[cops_elasticsearch_push_codes_sync_mode]}}"
  file_tests: "{{cops_elasticsearch_push_codes_file_tests[cops_elasticsearch_push_codes_sync_mode]}}"
  owner: "{user}"
  group: "{group}"
  sub_paths:
  - path: local/setups.elasticsearch
    rsync_opts: "{{cops_elasticsearch_push_codes_rsync_submodule_opts[cops_elasticsearch_push_codes_sync_mode]}}"
    is_submodule: true
# SSH deploy settings -> env vault
cops_deploy_ssh_key_paths:
  deploy:
    path: "{{'local/.ssh/deploy_key'|copsf_abspath}}"
    pub: "{{cops_deploy_ssh_pub_key|default('')}}"
    #  ssh-rsa xxx x@y
    # should be in encypted vault
    private: "{{cops_deploy_ssh_key|default('')}}"
    # -----BEGIN RSA PRIVATE KEY-----
    # -----END RSA PRIVATE KEY-----
# vim:set ft=sls:

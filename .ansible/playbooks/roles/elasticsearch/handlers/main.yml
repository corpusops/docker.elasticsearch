---
- listen: restart_cops_elasticsearch
  become: true
  systemd:
    daemon_reload: yes
    state: restarted
    name: "{{item}}"
  with_items: "{{cops_elasticsearch_vars.services}}"
  tags: [cops_elasticsearch_handlers, cops_elasticsearch_handlers_restart]
  when: "(cops_elasticsearch_vars.activated and
          corpusops_vars.has_services_manager and
          (ansible_service_mgr == 'systemd'))"
- listen: restart_cops_elasticsearch
  become: true
  service:
    state: restarted
    name: "{{item}}"
  with_items: "{{cops_elasticsearch_vars.services}}"
  tags: [cops_elasticsearch_handlers, cops_elasticsearch_handlers_restart]
  when: "(cops_elasticsearch_vars.activated and
          corpusops_vars.has_services_manager and
          (ansible_service_mgr != 'systemd'))"
- listen: reload_cops_elasticsearch
  become: true
  systemd:
    daemon_reload: yes
    state: reloaded
    name: "{{item}}"
  with_items: "{{cops_elasticsearch_vars.services}}"
  tags: [cops_elasticsearch_handlers, cops_elasticsearch_handlers_reload]
  when: "(cops_elasticsearch_vars.activated and
          corpusops_vars.has_services_manager and
          (ansible_service_mgr == 'systemd'))"
- listen: reload_cops_elasticsearch
  become: true
  service:
    state: reloaded
    name: "{{item}}"
  with_items: "{{cops_elasticsearch_vars.services}}"
  tags: [cops_elasticsearch_handlers, cops_elasticsearch_handlers_reload]
  when: "(cops_elasticsearch_vars.activated and
          corpusops_vars.has_services_manager and
          (ansible_service_mgr != 'systemd'))"

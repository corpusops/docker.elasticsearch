---
- when: [cops_elasticsearch_s_prerequisites_pkgs]
  tags: [cops_elasticsearch_s_prerequisites_pkgs]
  block:
  - name: update & install prerequisites
    package:
      cache_valid_time: '{{60*60}}'
      update_cache: yes
      name: '{{item}}'
      state: present
    when: "(ansible_os_family.lower() in ['debian'] and
            cops_elasticsearch_vars.deb_packages is not none and
            cops_elasticsearch_vars.deb_packages|length > 0)"
    with_items: "{{cops_elasticsearch_vars.deb_packages}}"
  - name: update & install prerequisites
    package:
      update_cache: yes
      enablerepo: epel,epel-testing
      name: '{{item}}'
      state: present
    when: "(ansible_os_family.lower() in ['redhat'] and
            cops_elasticsearch_vars.rh_packages is not none and
            cops_elasticsearch_vars.rh_packages|length > 0)"
    with_items: "{{cops_elasticsearch_vars.rh_packages}}"

# Install a jdk (oracle)
- tags: [cops_elasticsearch_s_prerequisites_jdk]
  when: [cops_elasticsearch_s_prerequisites_jdk]
  block:
  - include_role:
      name: "corpusops.roles/localsettings_jdk"
  - stat:
      path: "{{cops_elasticsearch_sha1file}}"
    register: cops_elasticsearch_sha1test

# get elasticsearch archive sha checksum
- when: [cops_elasticsearch_s_prerequisites_archive_es]
  tags: [cops_elasticsearch_s_prerequisites_archive_es]
  block:
  - name: get archive - SHA CRC
    get_url:
      url: "{{cops_elasticsearch_sha1_url}}"
      dest: "{{cops_elasticsearch_sha1file}}"
    become: yes
    become_user: "{{cops_elasticsearch_vars.user}}"
    when: "(cops_elasticsearch_vars.sha1_verify and
            not cops_elasticsearch_sha1test.stat.exists)"
  - shell: "cat {{cops_elasticsearch_sha1file}}"
    register: app_sha1v
    when: ["(cops_elasticsearch_vars.sha1_verify)"]


# Download, unpack, link elasticsearch release tarball
- include_role: {name: corpusops.roles/install_archive}
  become: yes
  become_user: "{{cops_elasticsearch_vars.user}}"
  vars:
    _archive:
      filetest: "{{cops_elasticsearch_vars.filetest}}"
      archive: "{{cops_elasticsearch_vars.tb}}"
      app_path: "{{cops_elasticsearch_vars.real_root}}"
      urls:
        archive: "{{cops_elasticsearch_url}}"
        archive_crc: "{{app_sha1v.stdout.strip()}}"
        verify_sha1: "{{cops_elasticsearch_vars.sha1_verify}}"
  tags: [cops_elasticsearch_s_prerequisites_es]
  when: [cops_elasticsearch_s_prerequisites_es]

# Configure nginx itself
- include_role:
    name: "corpusops.roles/services_http_nginx"
  tags: [cops_elasticsearch_s_prerequisistes_reverse_proxy_install]
  when: [cops_elasticsearch_s_prerequisistes_reverse_proxy_install]
